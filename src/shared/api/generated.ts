/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * passput
 * OpenAPI spec version: 1.0.0
 */
import { createInstance } from "./api-instance";
import type { BodyType } from "./api-instance";
export type PasswordListControllerGetPasswordListParams = {
  q?: string;
};

export interface PasswordListDto {
  id: number;
  items: string[];
  ownerId: number;
}

export interface GetSessionInfoDto {
  email: string;
  exp: number;
  iat: number;
  id: number;
}

export interface SignInBodyDto {
  email: string;
  password: string;
}

export interface SignUpBodyDto {
  email: string;
  password: string;
}

export interface PasswordItemDto {
  createdAt: string;
  id: number;
  login: string;
  password: string;
  passwordListId: number;
  site: string;
}

export interface CreatePasswordItemDto {
  data: string;
  login: string;
  password: string;
  site: string;
}

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (
  config: any,
  args: infer P,
) => any
  ? P
  : never;

export const appControllerGetHello = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>({ url: `/`, method: "GET" }, options);
};

export const passwordItemControllerCreate = (
  createPasswordItemDto: BodyType<CreatePasswordItemDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<PasswordItemDto>(
    {
      url: `/password-item`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: createPasswordItemDto,
    },
    options,
  );
};

export const passwordItemControllerRemovePasswordItem = (
  id: number,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<PasswordItemDto>(
    { url: `/password-item/${id}`, method: "DELETE" },
    options,
  );
};

export const authControllerSignUp = (
  signUpBodyDto: BodyType<SignUpBodyDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    {
      url: `/auth/sign-up`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: signUpBodyDto,
    },
    options,
  );
};

export const authControllerSignIn = (
  signInBodyDto: BodyType<SignInBodyDto>,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    {
      url: `/auth/sign-in`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: signInBodyDto,
    },
    options,
  );
};

export const authControllerSignOut = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<void>(
    { url: `/auth/sign-out`, method: "POST" },
    options,
  );
};

export const authControllerGetSessionInfo = (
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<GetSessionInfoDto>(
    { url: `/auth/session`, method: "GET" },
    options,
  );
};

export const passwordListControllerGetPasswordList = (
  params?: PasswordListControllerGetPasswordListParams,
  options?: SecondParameter<typeof createInstance>,
) => {
  return createInstance<PasswordListDto>(
    { url: `/password-list`, method: "GET", params },
    options,
  );
};

export type AppControllerGetHelloResult = NonNullable<
  Awaited<ReturnType<typeof appControllerGetHello>>
>;
export type PasswordItemControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof passwordItemControllerCreate>>
>;
export type PasswordItemControllerRemovePasswordItemResult = NonNullable<
  Awaited<ReturnType<typeof passwordItemControllerRemovePasswordItem>>
>;
export type AuthControllerSignUpResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignUp>>
>;
export type AuthControllerSignInResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignIn>>
>;
export type AuthControllerSignOutResult = NonNullable<
  Awaited<ReturnType<typeof authControllerSignOut>>
>;
export type AuthControllerGetSessionInfoResult = NonNullable<
  Awaited<ReturnType<typeof authControllerGetSessionInfo>>
>;
export type PasswordListControllerGetPasswordListResult = NonNullable<
  Awaited<ReturnType<typeof passwordListControllerGetPasswordList>>
>;
